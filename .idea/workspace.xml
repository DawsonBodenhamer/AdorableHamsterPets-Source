<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="052c5d33-d6bb-405e-abe0-6cb2032d8642" name="Changes" comment="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.">
      <change afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/GuideBookUtil.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/HamsterSoundManager.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/util/HamsterRenderTracker.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.14/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/fileHashes/resourceHashesCache.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___fabric__fabric.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___fabric__fabric.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___neoforge__neoforge.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___neoforge__neoforge.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/problems/problems-report.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/problems/problems-report.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/common/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionFabric.jar" beforeDir="false" afterPath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionFabric.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionNeoForge.jar" beforeDir="false" afterPath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionNeoForge.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/build/resources/main/adorablehamsterpets.mixins.json" beforeDir="false" afterPath="$PROJECT_DIR$/common/build/resources/main/adorablehamsterpets.mixins.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPets.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPets.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPetsClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPetsClient.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/HamsterRenderState.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/HamsterShoulderData.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/HamsterShoulderData.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/ModEntityAttachments.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/option/ModKeyBindings.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/option/ModKeyBindings.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/sound/HamsterCleaningSoundInstance.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/sound/HamsterCleaningSoundInstance.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/ModDataComponentTypes.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/ModDataComponentTypes.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterModel.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterRenderer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterRenderer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/ModModelLayers.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/ModModelLayers.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/feature/HamsterShoulderFeatureRenderer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/feature/HamsterShoulderFeatureRenderer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterOverlayLayer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterOverlayLayer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterPinkPetalOverlayLayer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterPinkPetalOverlayLayer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/model/HamsterShoulderModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/model/HamsterShoulderModel.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/item/ModItems.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/item/ModItems.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/mixin/server/PlayerEntityMixin.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/mixin/server/PlayerEntityMixin.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/ModPackets.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/ModPackets.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnAttackParticlesPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnAttackParticlesPayload.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnSeekingDustPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnSeekingDustPayload.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterFlightSoundPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterFlightSoundPayload.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterThrowSoundPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterThrowSoundPayload.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/ThrowHamsterPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/ThrowHamsterPayload.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/UpdateHamsterRenderStatePayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/UpdateHamsterRenderStatePayload.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreen.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreen.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreenHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreenHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/world/gen/ModEntitySpawns.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/world/gen/ModEntitySpawns.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/.gradle/loom-cache/remapClasspath.txt" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/.gradle/loom-cache/remapClasspath.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/build/classes/java/main/net/dawson/adorablehamsterpets/fabric/AdorableHamsterPetsFabric.class" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build/classes/java/main/net/dawson/adorablehamsterpets/fabric/AdorableHamsterPetsFabric.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/build/resources/main/adorablehamsterpets.accesswidener" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/build/resources/main/fabric.mod.json" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build/resources/main/fabric.mod.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/AdorableHamsterPetsDataGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/AdorableHamsterPetsDataGenerator.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/EnUsGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/EnUsGenerator.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModLootTableProvider.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModLootTableProvider.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModModelProvider.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModModelProvider.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModRecipeProvider.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModRecipeProvider.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModRegistryDataGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModRegistryDataGenerator.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/resources/adorablehamsterpets.accesswidener" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/fabric/src/main/resources/fabric.mod.json" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/src/main/resources/fabric.mod.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/neoforge/build/classes/java/main/net/dawson/adorablehamsterpets/neoforge/AdorableHamsterPetsNeoForge.class" beforeDir="false" afterPath="$PROJECT_DIR$/neoforge/build/classes/java/main/net/dawson/adorablehamsterpets/neoforge/AdorableHamsterPetsNeoForge.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/neoforge/build/resources/main/META-INF/neoforge.mods.toml" beforeDir="false" afterPath="$PROJECT_DIR$/neoforge/build/resources/main/META-INF/neoforge.mods.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/neoforge/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/neoforge/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/fabric">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/common">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
                <item name="fabric" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
                <item name="fabric" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
                <item name="fabric" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="loom" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DawsonBodenhamer&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/DawsonBodenhamer/Adorable-Hamster-Pets-2.0.git&quot;,
    &quot;accountId&quot;: &quot;86b0f780-3b69-428c-b6cd-714d426f85fb&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2yeItHvicGlW6Xb6P1qZnXU4TUz" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Gradle.Adorable Hamster Pets [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Adorable Hamster Pets:fabric [:fabric:dev.architectury.transformer.TransformerRuntime.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Adorable Hamster Pets:fabric [runDatagen].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/tweek/OneDrive/Documents/MY MINECRAFT MODS/Data/Repositories/Adorable Hamster Pets/common/src/main/java/net/dawson/adorablehamsterpets&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\tweek\OneDrive\Documents\MY MINECRAFT MODS\Data\Repositories\Adorable Hamster Pets\common\src\main\java\net\dawson\adorablehamsterpets" />
      <recent name="C:\Users\tweek\OneDrive\Documents\MY MINECRAFT MODS\Data\Repositories\Adorable Hamster Pets\common\src\main\java\net\dawson\adorablehamsterpets\entity" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.Adorable Hamster Pets:fabric [runDatagen]">
    <configuration name="Adorable Hamster Pets [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="Adorable Hamster Pets:fabric [runDatagen]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/fabric" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--debug --stacktrace --scan --warning-mode all" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="runDatagen" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.Data Generation (:fabric)" />
      <item itemvalue="Application.Minecraft Client (:fabric)" />
      <item itemvalue="Application.Minecraft Client (:neoforge)" />
      <item itemvalue="Application.Minecraft Server (:fabric)" />
      <item itemvalue="Application.Minecraft Server (:neoforge)" />
      <item itemvalue="Gradle.Adorable Hamster Pets [build]" />
      <item itemvalue="Gradle.Adorable Hamster Pets:fabric [runDatagen]" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.Adorable Hamster Pets:fabric [runDatagen]" />
        <item itemvalue="Gradle.Adorable Hamster Pets [build]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="052c5d33-d6bb-405e-abe0-6cb2032d8642" name="Changes" comment="" />
      <created>1750188824967</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1750188824967</updated>
    </task>
    <task id="LOCAL-00001" summary="[REFACTOR] Migrate core registries and networking to Architectury API&#10;&#10;This commit refactors a significant portion of the mod's infrastructure from Fabric API to the Architectury API to support multi-loader builds.&#10;&#10;- [REFACTOR] Migrated Item, Block, Sound, Entity, and ScreenHandler registries to use Architectury's DeferredRegister system.&#10;- [REFACTOR] Replaced Fabric Networking API with Architectury's NetworkManager, centralizing packet registration and handling into a new `ModPackets` class.&#10;- [REFACTOR] Replaced Fabric event listeners (`CommandRegistrationCallback`, `PlayerEvent`) with their Architectury equivalents.&#10;- [REFACTOR] Replaced Fabric's `CompostingChanceRegistry` helper with direct calls to the vanilla `ComposterBlock` map, triggered by an Architectury `LifecycleEvent`.&#10;- [REFACTOR] Updated world generation to use Architectury's `BiomeModifications` API instead of Fabric's.&#10;- [CHORE] Consolidated biome-checking logic into `ModEntitySpawns` to act as a single source of truth.">
      <option name="closed" value="true" />
      <created>1750450802800</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1750450802800</updated>
    </task>
    <task id="LOCAL-00002" summary="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.">
      <option name="closed" value="true" />
      <created>1750534167702</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1750534167702</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[REFACTOR] Migrate core registries and networking to Architectury API&#10;&#10;This commit refactors a significant portion of the mod's infrastructure from Fabric API to the Architectury API to support multi-loader builds.&#10;&#10;- [REFACTOR] Migrated Item, Block, Sound, Entity, and ScreenHandler registries to use Architectury's DeferredRegister system.&#10;- [REFACTOR] Replaced Fabric Networking API with Architectury's NetworkManager, centralizing packet registration and handling into a new `ModPackets` class.&#10;- [REFACTOR] Replaced Fabric event listeners (`CommandRegistrationCallback`, `PlayerEvent`) with their Architectury equivalents.&#10;- [REFACTOR] Replaced Fabric's `CompostingChanceRegistry` helper with direct calls to the vanilla `ComposterBlock` map, triggered by an Architectury `LifecycleEvent`.&#10;- [REFACTOR] Updated world generation to use Architectury's `BiomeModifications` API instead of Fabric's.&#10;- [CHORE] Consolidated biome-checking logic into `ModEntitySpawns` to act as a single source of truth." />
    <MESSAGE value="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus." />
    <option name="LAST_COMMIT_MESSAGE" value="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java</url>
          <line>2371</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>