<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="052c5d33-d6bb-405e-abe0-6cb2032d8642" name="Changes" comment="[REFACTOR] Moved datagen back to the fabric module, by reverting to previous commit.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/fabric">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/common">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
                <item name="fabric" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
                <item name="fabric" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="adorablehamsterpets" type="f1a62948:ProjectNode" />
                <item name="fabric" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="loom" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="29a5c7e1e3b08a92b05f2d1bddb3ed05f856d8c7" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="SOFT" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DawsonBodenhamer&quot;
  }
}</component>
  <component name="GitRewordedCommitMessages">
    <option name="commitMessagesMapping">
      <RewordedCommitMessageMapping>
        <option name="originalMessage" value="[REFACTOR] Moved datagen back to the fabric module, by reverting to previous commit." />
        <option name="rewordedMessage" value="[REFACTOR] Moved datagen back to the fabric module, by reverting to previous commit." />
      </RewordedCommitMessageMapping>
    </option>
    <option name="currentCommit" value="1" />
    <option name="onto" value="069282525d17b3841175425092bdc37e631424ea" />
  </component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/DawsonBodenhamer/Adorable-Hamster-Pets-2.0.git&quot;,
    &quot;accountId&quot;: &quot;86b0f780-3b69-428c-b6cd-714d426f85fb&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2yeItHvicGlW6Xb6P1qZnXU4TUz" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Gradle.Adorable Hamster Pets [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Adorable Hamster Pets:common [runDatagen].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Adorable Hamster Pets:fabric [:fabric:dev.architectury.transformer.TransformerRuntime.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Adorable Hamster Pets:fabric [runDatagen].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/tweek/OneDrive/Documents/MY MINECRAFT MODS/Data/Repositories/fabric-data-generation-template-1.21.1&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,
    &quot;two.files.diff.last.used.file&quot;: &quot;C:/Users/tweek/Downloads/test.txt&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\tweek\OneDrive\Documents\MY MINECRAFT MODS\Data\Repositories\Adorable Hamster Pets\common\src\main\resources" />
      <recent name="C:\Users\tweek\OneDrive\Documents\MY MINECRAFT MODS\Data\Repositories\Adorable Hamster Pets\common\src\main\java\net\dawson\adorablehamsterpets" />
      <recent name="C:\Users\tweek\OneDrive\Documents\MY MINECRAFT MODS\Data\Repositories\Adorable Hamster Pets\common\src\main\java\net\dawson\adorablehamsterpets\entity" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.Adorable Hamster Pets:fabric [runDatagen]">
    <configuration name="Adorable Hamster Pets [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="Adorable Hamster Pets:common [runDatagen]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/common" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--debug --stacktrace --scan --warning-mode all" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="runDatagen" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="Adorable Hamster Pets:fabric [runDatagen]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/fabric" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--debug --stacktrace --scan --warning-mode all" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="runDatagen" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.Data Generation (:fabric)" />
      <item itemvalue="Application.Minecraft Client (:fabric)" />
      <item itemvalue="Application.Minecraft Client (:neoforge)" />
      <item itemvalue="Application.Minecraft Server (:fabric)" />
      <item itemvalue="Application.Minecraft Server (:neoforge)" />
      <item itemvalue="Gradle.Adorable Hamster Pets:common [runDatagen]" />
      <item itemvalue="Gradle.Adorable Hamster Pets [build]" />
      <item itemvalue="Gradle.Adorable Hamster Pets:fabric [runDatagen]" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.Adorable Hamster Pets:fabric [runDatagen]" />
        <item itemvalue="Gradle.Adorable Hamster Pets [build]" />
        <item itemvalue="Gradle.Adorable Hamster Pets:common [runDatagen]" />
        <item itemvalue="Gradle.Adorable Hamster Pets:common [runDatagen]" />
        <item itemvalue="Gradle.Adorable Hamster Pets:fabric [runDatagen]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="052c5d33-d6bb-405e-abe0-6cb2032d8642" name="Changes" comment="" />
      <created>1750188824967</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1750188824967</updated>
    </task>
    <task id="LOCAL-00001" summary="[REFACTOR] Migrate core registries and networking to Architectury API&#10;&#10;This commit refactors a significant portion of the mod's infrastructure from Fabric API to the Architectury API to support multi-loader builds.&#10;&#10;- [REFACTOR] Migrated Item, Block, Sound, Entity, and ScreenHandler registries to use Architectury's DeferredRegister system.&#10;- [REFACTOR] Replaced Fabric Networking API with Architectury's NetworkManager, centralizing packet registration and handling into a new `ModPackets` class.&#10;- [REFACTOR] Replaced Fabric event listeners (`CommandRegistrationCallback`, `PlayerEvent`) with their Architectury equivalents.&#10;- [REFACTOR] Replaced Fabric's `CompostingChanceRegistry` helper with direct calls to the vanilla `ComposterBlock` map, triggered by an Architectury `LifecycleEvent`.&#10;- [REFACTOR] Updated world generation to use Architectury's `BiomeModifications` API instead of Fabric's.&#10;- [CHORE] Consolidated biome-checking logic into `ModEntitySpawns` to act as a single source of truth.">
      <option name="closed" value="true" />
      <created>1750450802800</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1750450802800</updated>
    </task>
    <task id="LOCAL-00002" summary="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.">
      <option name="closed" value="true" />
      <created>1750534167702</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1750534167702</updated>
    </task>
    <task id="LOCAL-00003" summary="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module.">
      <option name="closed" value="true" />
      <created>1750690233034</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1750690233034</updated>
    </task>
    <task id="LOCAL-00004" summary="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module.">
      <option name="closed" value="true" />
      <created>1750690245920</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1750690245920</updated>
    </task>
    <task id="LOCAL-00005" summary="[REFACTOR] Implement @ExpectPlatform and centralize datagen&#10;&#10;This commit completes the migration of platform-specific APIs to&#10;cross-platform solutions using Architectury's @ExpectPlatform bridge and&#10;centralizes the data generation process into the common module.&#10;&#10;- Replaced the Fabric-specific spawn restriction logic with an&#10;  @ExpectPlatform bridge in `common/world/ModSpawnPlacements.java`.&#10;- Provided platform-specific implementations for spawn restrictions in&#10;  `fabric/world/fabric` and `neoforge/world/neoforge`.&#10;- Moved all data generation provider classes from the `fabric` module to&#10;  the `common` module.&#10;- Configured the `common/build.gradle` to include Fabric API as a&#10;  compile-time dependency for the `runDatagen` task.">
      <option name="closed" value="true" />
      <created>1750965584667</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1750965584667</updated>
    </task>
    <task id="LOCAL-00006" summary="[REFACTOR] Implement @ExpectPlatform and centralize datagen&#10;&#10;This commit completes the migration of platform-specific APIs to&#10;cross-platform solutions using Architectury's @ExpectPlatform bridge and&#10;centralizes the data generation process into the common module.&#10;&#10;- Replaced the Fabric-specific spawn restriction logic with an&#10;  @ExpectPlatform bridge in `common/world/ModSpawnPlacements.java`.&#10;- Provided platform-specific implementations for spawn restrictions in&#10;  `fabric/world/fabric` and `neoforge/world/neoforge`.&#10;- Moved all data generation provider classes from the `fabric` module to&#10;  the `common` module.&#10;- Configured the `common/build.gradle` to include Fabric API as a&#10;  compile-time dependency for the `runDatagen` task.">
      <option name="closed" value="true" />
      <created>1750965624164</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1750965624164</updated>
    </task>
    <task id="LOCAL-00007" summary="[CHORE] Prepare for shared initializer refactor&#10;&#10;This commit includes minor build script and code cleanup in preparation&#10;for refactoring the mod's initialization sequence. The data generation&#10;process is still failing, but the codebase is now in a stable state to&#10;attempt a fix.&#10;&#10;- [FIX] Corrected a `NoClassDefFoundError` during datagen by adding necessary mod dependencies to the `common/build.gradle` datagen classpath.&#10;&#10;The next step is to create a shared initializer that can be called by both the runtime and datagen entrypoints to resolve the `IllegalStateException: This registry can't create intrusive holders` error.">
      <option name="closed" value="true" />
      <created>1750977093324</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1750977093324</updated>
    </task>
    <task id="LOCAL-00008" summary="[CHORE] Prepare for split initializer refactor">
      <option name="closed" value="true" />
      <created>1750978978700</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1750978978700</updated>
    </task>
    <task id="LOCAL-00009" summary="[CHORE] Prepare for moving datagen back to the fabric module">
      <option name="closed" value="true" />
      <created>1750981401836</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1750981401836</updated>
    </task>
    <task id="LOCAL-00010" summary="[REFACTOR] Moved datagen back to the fabric module, by reverting to previous commit.">
      <option name="closed" value="true" />
      <created>1751030494889</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1751030494889</updated>
    </task>
    <task id="LOCAL-00011" summary="[REFACTOR] Moved datagen back to the fabric module, by reverting to previous commit.">
      <option name="closed" value="true" />
      <created>1751036097290</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1751036097290</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[REFACTOR] Migrate core registries and networking to Architectury API&#10;&#10;This commit refactors a significant portion of the mod's infrastructure from Fabric API to the Architectury API to support multi-loader builds.&#10;&#10;- [REFACTOR] Migrated Item, Block, Sound, Entity, and ScreenHandler registries to use Architectury's DeferredRegister system.&#10;- [REFACTOR] Replaced Fabric Networking API with Architectury's NetworkManager, centralizing packet registration and handling into a new `ModPackets` class.&#10;- [REFACTOR] Replaced Fabric event listeners (`CommandRegistrationCallback`, `PlayerEvent`) with their Architectury equivalents.&#10;- [REFACTOR] Replaced Fabric's `CompostingChanceRegistry` helper with direct calls to the vanilla `ComposterBlock` map, triggered by an Architectury `LifecycleEvent`.&#10;- [REFACTOR] Updated world generation to use Architectury's `BiomeModifications` API instead of Fabric's.&#10;- [CHORE] Consolidated biome-checking logic into `ModEntitySpawns` to act as a single source of truth." />
    <MESSAGE value="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus." />
    <MESSAGE value="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module." />
    <MESSAGE value="[REFACTOR] Implement @ExpectPlatform and centralize datagen&#10;&#10;This commit completes the migration of platform-specific APIs to&#10;cross-platform solutions using Architectury's @ExpectPlatform bridge and&#10;centralizes the data generation process into the common module.&#10;&#10;- Replaced the Fabric-specific spawn restriction logic with an&#10;  @ExpectPlatform bridge in `common/world/ModSpawnPlacements.java`.&#10;- Provided platform-specific implementations for spawn restrictions in&#10;  `fabric/world/fabric` and `neoforge/world/neoforge`.&#10;- Moved all data generation provider classes from the `fabric` module to&#10;  the `common` module.&#10;- Configured the `common/build.gradle` to include Fabric API as a&#10;  compile-time dependency for the `runDatagen` task." />
    <MESSAGE value="[CHORE] Prepare for shared initializer refactor&#10;&#10;This commit includes minor build script and code cleanup in preparation&#10;for refactoring the mod's initialization sequence. The data generation&#10;process is still failing, but the codebase is now in a stable state to&#10;attempt a fix.&#10;&#10;- [FIX] Corrected a `NoClassDefFoundError` during datagen by adding necessary mod dependencies to the `common/build.gradle` datagen classpath.&#10;&#10;The next step is to create a shared initializer that can be called by both the runtime and datagen entrypoints to resolve the `IllegalStateException: This registry can't create intrusive holders` error." />
    <MESSAGE value="[CHORE] Prepare for split initializer refactor" />
    <MESSAGE value="[CHORE] Prepare for moving datagen back to the fabric module" />
    <MESSAGE value="[REFACTOR] Moved datagen back to the fabric module, by reverting to previous commit." />
    <option name="LAST_COMMIT_MESSAGE" value="[REFACTOR] Moved datagen back to the fabric module, by reverting to previous commit." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java</url>
          <line>2371</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>