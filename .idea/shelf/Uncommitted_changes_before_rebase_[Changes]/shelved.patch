Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"052c5d33-d6bb-405e-abe0-6cb2032d8642\" name=\"Changes\" comment=\"[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.\">\n      <change afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/GuideBookUtil.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/HamsterSoundManager.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/util/HamsterRenderTracker.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.14/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.14/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___fabric__fabric.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___fabric__fabric.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___neoforge__neoforge.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___neoforge__neoforge.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/build.gradle\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build.gradle\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/build/reports/problems/problems-report.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/reports/problems/problems-report.html\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/build.gradle\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/build.gradle\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionFabric.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionFabric.jar\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionNeoForge.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionNeoForge.jar\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/build/resources/main/adorablehamsterpets.mixins.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/build/resources/main/adorablehamsterpets.mixins.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPets.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPets.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPetsClient.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPetsClient.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/HamsterRenderState.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/HamsterShoulderData.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/HamsterShoulderData.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/ModEntityAttachments.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/option/ModKeyBindings.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/option/ModKeyBindings.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/sound/HamsterCleaningSoundInstance.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/sound/HamsterCleaningSoundInstance.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/ModDataComponentTypes.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/ModDataComponentTypes.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterModel.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterRenderer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterRenderer.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/ModModelLayers.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/ModModelLayers.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/feature/HamsterShoulderFeatureRenderer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/feature/HamsterShoulderFeatureRenderer.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterOverlayLayer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterOverlayLayer.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterPinkPetalOverlayLayer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterPinkPetalOverlayLayer.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/model/HamsterShoulderModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/model/HamsterShoulderModel.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/item/ModItems.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/item/ModItems.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/mixin/server/PlayerEntityMixin.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/mixin/server/PlayerEntityMixin.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/ModPackets.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/ModPackets.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnAttackParticlesPayload.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnAttackParticlesPayload.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnSeekingDustPayload.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnSeekingDustPayload.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterFlightSoundPayload.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterFlightSoundPayload.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterThrowSoundPayload.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterThrowSoundPayload.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/ThrowHamsterPayload.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/ThrowHamsterPayload.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/UpdateHamsterRenderStatePayload.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/UpdateHamsterRenderStatePayload.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreen.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreen.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreenHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreenHandler.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/world/gen/ModEntitySpawns.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/world/gen/ModEntitySpawns.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/.gradle/loom-cache/remapClasspath.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/fabric/.gradle/loom-cache/remapClasspath.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/build.gradle\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/fabric/build.gradle\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/build/classes/java/main/net/dawson/adorablehamsterpets/fabric/AdorableHamsterPetsFabric.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/fabric/build/classes/java/main/net/dawson/adorablehamsterpets/fabric/AdorableHamsterPetsFabric.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/build/resources/main/adorablehamsterpets.accesswidener\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/build/resources/main/fabric.mod.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/fabric/build/resources/main/fabric.mod.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/build/tmp/compileJava/previous-compilation-data.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/fabric/build/tmp/compileJava/previous-compilation-data.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/AdorableHamsterPetsDataGenerator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/AdorableHamsterPetsDataGenerator.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/EnUsGenerator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/EnUsGenerator.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModLootTableProvider.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModLootTableProvider.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModModelProvider.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModModelProvider.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModRecipeProvider.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModRecipeProvider.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModRegistryDataGenerator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModRegistryDataGenerator.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/resources/adorablehamsterpets.accesswidener\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/fabric/src/main/resources/fabric.mod.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/fabric/src/main/resources/fabric.mod.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/neoforge/build/classes/java/main/net/dawson/adorablehamsterpets/neoforge/AdorableHamsterPetsNeoForge.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/neoforge/build/classes/java/main/net/dawson/adorablehamsterpets/neoforge/AdorableHamsterPetsNeoForge.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/neoforge/build/resources/main/META-INF/neoforge.mods.toml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/neoforge/build/resources/main/META-INF/neoforge.mods.toml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/neoforge/build/tmp/compileJava/previous-compilation-data.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/neoforge/build/tmp/compileJava/previous-compilation-data.bin\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$\">\n          <activation />\n        </task>\n        <task path=\"$PROJECT_DIR$/fabric\">\n          <activation />\n        </task>\n        <task path=\"$PROJECT_DIR$/common\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"adorablehamsterpets\" type=\"f1a62948:ProjectNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"adorablehamsterpets\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"fabric\" type=\"2d1252cf:ModuleNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"adorablehamsterpets\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"fabric\" type=\"2d1252cf:ModuleNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"adorablehamsterpets\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"fabric\" type=\"2d1252cf:ModuleNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"loom\" type=\"c8890929:TasksNode$1\" />\n              </path>\n            </expand>\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;DawsonBodenhamer&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/DawsonBodenhamer/Adorable-Hamster-Pets-2.0.git&quot;,\n    &quot;accountId&quot;: &quot;86b0f780-3b69-428c-b6cd-714d426f85fb&quot;\n  }\n}</component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"2yeItHvicGlW6Xb6P1qZnXU4TUz\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Gradle.Adorable Hamster Pets [build].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Adorable Hamster Pets:fabric [:fabric:dev.architectury.transformer.TransformerRuntime.main()].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Adorable Hamster Pets:fabric [runDatagen].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/tweek/OneDrive/Documents/MY MINECRAFT MODS/Data/Repositories/Adorable Hamster Pets/common/src/main/java/net/dawson/adorablehamsterpets&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\tweek\\OneDrive\\Documents\\MY MINECRAFT MODS\\Data\\Repositories\\Adorable Hamster Pets\\common\\src\\main\\java\\net\\dawson\\adorablehamsterpets\" />\n      <recent name=\"C:\\Users\\tweek\\OneDrive\\Documents\\MY MINECRAFT MODS\\Data\\Repositories\\Adorable Hamster Pets\\common\\src\\main\\java\\net\\dawson\\adorablehamsterpets\\entity\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Gradle.Adorable Hamster Pets:fabric [runDatagen]\">\n    <configuration name=\"Adorable Hamster Pets [build]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"build\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>false</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Adorable Hamster Pets:fabric [runDatagen]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$/fabric\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"--debug --stacktrace --scan --warning-mode all\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"runDatagen\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>false</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.Data Generation (:fabric)\" />\n      <item itemvalue=\"Application.Minecraft Client (:fabric)\" />\n      <item itemvalue=\"Application.Minecraft Client (:neoforge)\" />\n      <item itemvalue=\"Application.Minecraft Server (:fabric)\" />\n      <item itemvalue=\"Application.Minecraft Server (:neoforge)\" />\n      <item itemvalue=\"Gradle.Adorable Hamster Pets [build]\" />\n      <item itemvalue=\"Gradle.Adorable Hamster Pets:fabric [runDatagen]\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Gradle.Adorable Hamster Pets:fabric [runDatagen]\" />\n        <item itemvalue=\"Gradle.Adorable Hamster Pets [build]\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"052c5d33-d6bb-405e-abe0-6cb2032d8642\" name=\"Changes\" comment=\"\" />\n      <created>1750188824967</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1750188824967</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"[REFACTOR] Migrate core registries and networking to Architectury API&#10;&#10;This commit refactors a significant portion of the mod's infrastructure from Fabric API to the Architectury API to support multi-loader builds.&#10;&#10;- [REFACTOR] Migrated Item, Block, Sound, Entity, and ScreenHandler registries to use Architectury's DeferredRegister system.&#10;- [REFACTOR] Replaced Fabric Networking API with Architectury's NetworkManager, centralizing packet registration and handling into a new `ModPackets` class.&#10;- [REFACTOR] Replaced Fabric event listeners (`CommandRegistrationCallback`, `PlayerEvent`) with their Architectury equivalents.&#10;- [REFACTOR] Replaced Fabric's `CompostingChanceRegistry` helper with direct calls to the vanilla `ComposterBlock` map, triggered by an Architectury `LifecycleEvent`.&#10;- [REFACTOR] Updated world generation to use Architectury's `BiomeModifications` API instead of Fabric's.&#10;- [CHORE] Consolidated biome-checking logic into `ModEntitySpawns` to act as a single source of truth.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1750450802800</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1750450802800</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1750534167702</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1750534167702</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"[REFACTOR] Migrate core registries and networking to Architectury API&#10;&#10;This commit refactors a significant portion of the mod's infrastructure from Fabric API to the Architectury API to support multi-loader builds.&#10;&#10;- [REFACTOR] Migrated Item, Block, Sound, Entity, and ScreenHandler registries to use Architectury's DeferredRegister system.&#10;- [REFACTOR] Replaced Fabric Networking API with Architectury's NetworkManager, centralizing packet registration and handling into a new `ModPackets` class.&#10;- [REFACTOR] Replaced Fabric event listeners (`CommandRegistrationCallback`, `PlayerEvent`) with their Architectury equivalents.&#10;- [REFACTOR] Replaced Fabric's `CompostingChanceRegistry` helper with direct calls to the vanilla `ComposterBlock` map, triggered by an Architectury `LifecycleEvent`.&#10;- [REFACTOR] Updated world generation to use Architectury's `BiomeModifications` API instead of Fabric's.&#10;- [CHORE] Consolidated biome-checking logic into `ModEntitySpawns` to act as a single source of truth.\" />\n    <MESSAGE value=\"[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java</url>\n          <line>2371</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fa1b9391740e52aa6def4c6a4d8f54b5a0a82f78)
+++ b/.idea/workspace.xml	(date 1750690319311)
@@ -4,76 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="052c5d33-d6bb-405e-abe0-6cb2032d8642" name="Changes" comment="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus.">
-      <change afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/GuideBookUtil.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/HamsterSoundManager.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/util/HamsterRenderTracker.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/checksums.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/md5-checksums.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/checksums/sha1-checksums.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/executionHistory/executionHistory.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/fileHashes/fileHashes.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.14/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.14/fileHashes/resourceHashesCache.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___fabric__fabric.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___fabric__fabric.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___neoforge__neoforge.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Minecraft_Server___neoforge__neoforge.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/reports/problems/problems-report.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/problems/problems-report.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/common/build.gradle" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionFabric.jar" beforeDir="false" afterPath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionFabric.jar" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionNeoForge.jar" beforeDir="false" afterPath="$PROJECT_DIR$/common/build/libs/adorablehamsterpets-2.0.0+common-transformProductionNeoForge.jar" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/build/resources/main/adorablehamsterpets.mixins.json" beforeDir="false" afterPath="$PROJECT_DIR$/common/build/resources/main/adorablehamsterpets.mixins.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPets.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPets.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPetsClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/AdorableHamsterPetsClient.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/HamsterRenderState.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/HamsterShoulderData.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/HamsterShoulderData.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/attachment/ModEntityAttachments.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/option/ModKeyBindings.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/option/ModKeyBindings.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/sound/HamsterCleaningSoundInstance.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/client/sound/HamsterCleaningSoundInstance.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/ModDataComponentTypes.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/component/ModDataComponentTypes.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterModel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterRenderer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/HamsterRenderer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/ModModelLayers.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/ModModelLayers.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/feature/HamsterShoulderFeatureRenderer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/feature/HamsterShoulderFeatureRenderer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterOverlayLayer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterOverlayLayer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterPinkPetalOverlayLayer.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/layer/HamsterPinkPetalOverlayLayer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/model/HamsterShoulderModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/client/model/HamsterShoulderModel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/entity/custom/HamsterEntity.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/item/ModItems.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/item/ModItems.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/mixin/server/PlayerEntityMixin.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/mixin/server/PlayerEntityMixin.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/ModPackets.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/ModPackets.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnAttackParticlesPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnAttackParticlesPayload.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnSeekingDustPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/SpawnSeekingDustPayload.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterFlightSoundPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterFlightSoundPayload.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterThrowSoundPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/StartHamsterThrowSoundPayload.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/ThrowHamsterPayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/ThrowHamsterPayload.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/UpdateHamsterRenderStatePayload.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/networking/payload/UpdateHamsterRenderStatePayload.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreen.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreen.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreenHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/screen/HamsterInventoryScreenHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/world/gen/ModEntitySpawns.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/world/gen/ModEntitySpawns.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/.gradle/loom-cache/remapClasspath.txt" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/.gradle/loom-cache/remapClasspath.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build.gradle" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/build/classes/java/main/net/dawson/adorablehamsterpets/fabric/AdorableHamsterPetsFabric.class" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build/classes/java/main/net/dawson/adorablehamsterpets/fabric/AdorableHamsterPetsFabric.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/build/resources/main/adorablehamsterpets.accesswidener" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/build/resources/main/fabric.mod.json" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build/resources/main/fabric.mod.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/AdorableHamsterPetsDataGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/AdorableHamsterPetsDataGenerator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/EnUsGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/EnUsGenerator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModLootTableProvider.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModLootTableProvider.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModModelProvider.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModModelProvider.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModRecipeProvider.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModRecipeProvider.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/java/net/dawson/adorablehamsterpets/fabric/datagen/ModRegistryDataGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/net/dawson/adorablehamsterpets/datagen/ModRegistryDataGenerator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/resources/adorablehamsterpets.accesswidener" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/fabric/src/main/resources/fabric.mod.json" beforeDir="false" afterPath="$PROJECT_DIR$/fabric/src/main/resources/fabric.mod.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/neoforge/build/classes/java/main/net/dawson/adorablehamsterpets/neoforge/AdorableHamsterPetsNeoForge.class" beforeDir="false" afterPath="$PROJECT_DIR$/neoforge/build/classes/java/main/net/dawson/adorablehamsterpets/neoforge/AdorableHamsterPetsNeoForge.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/neoforge/build/resources/main/META-INF/neoforge.mods.toml" beforeDir="false" afterPath="$PROJECT_DIR$/neoforge/build/resources/main/META-INF/neoforge.mods.toml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/neoforge/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/neoforge/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
-    </list>
+    <list default="true" id="052c5d33-d6bb-405e-abe0-6cb2032d8642" name="Changes" comment="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module." />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -271,13 +202,41 @@
       <option name="project" value="LOCAL" />
       <updated>1750534167702</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module.">
+      <option name="closed" value="true" />
+      <created>1750690233034</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1750690233034</updated>
+    </task>
+    <task id="LOCAL-00004" summary="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module.">
+      <option name="closed" value="true" />
+      <created>1750690245920</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1750690245920</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="[REFACTOR] Migrate core registries and networking to Architectury API&#10;&#10;This commit refactors a significant portion of the mod's infrastructure from Fabric API to the Architectury API to support multi-loader builds.&#10;&#10;- [REFACTOR] Migrated Item, Block, Sound, Entity, and ScreenHandler registries to use Architectury's DeferredRegister system.&#10;- [REFACTOR] Replaced Fabric Networking API with Architectury's NetworkManager, centralizing packet registration and handling into a new `ModPackets` class.&#10;- [REFACTOR] Replaced Fabric event listeners (`CommandRegistrationCallback`, `PlayerEvent`) with their Architectury equivalents.&#10;- [REFACTOR] Replaced Fabric's `CompostingChanceRegistry` helper with direct calls to the vanilla `ComposterBlock` map, triggered by an Architectury `LifecycleEvent`.&#10;- [REFACTOR] Updated world generation to use Architectury's `BiomeModifications` API instead of Fabric's.&#10;- [CHORE] Consolidated biome-checking logic into `ModEntitySpawns` to act as a single source of truth." />
     <MESSAGE value="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus." />
-    <option name="LAST_COMMIT_MESSAGE" value="[FIX] Implement @ExpectPlatform for spawn restrictions&#10;&#10;Replaces the Fabric-only spawn restriction logic with a cross-platform&#10;@ExpectPlatform bridge, ensuring compatibility with NeoForge.&#10;&#10;- Adds the common `ModSpawnPlacements` class with the `@ExpectPlatform` method.&#10;- Implements the Fabric-specific version in `fabric/.../ModSpawnPlacementsImpl.java` using `SpawnRestriction.register`.&#10;- Implements the NeoForge-specific version in `neoforge/.../ModSpawnPlacementsImpl.java` using the `RegisterSpawnPlacementsEvent`.&#10;- Updates the main NeoForge entrypoint to correctly register the event listener to the mod event bus." />
+    <MESSAGE value="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module." />
+    <option name="LAST_COMMIT_MESSAGE" value="[REFACTOR] Finalize common module and fix build crashes&#10;&#10;This commit completes the major refactoring of the common module, resolving the final build crashes.&#10;&#10;- Replaced the Fabric-only AttachmentType system with a vanilla DataTracker on PlayerEntity for shoulder-riding, mimicking the vanilla parrot implementation.&#10;- Refactored all `getAttached`/`setAttached` calls in `HamsterEntity`, `PlayerEntityMixin`, and `HamsterShoulderFeatureRenderer` to use the new DataTracker system.&#10;- Replaced the client-side `HamsterRenderState` attachment with a server-side `HamsterRenderTracker` utility to manage footstep sounds in a cross-platform way.&#10;- Moved all datagen provider classes into the `common` module and configured the build script to make the Fabric API available only for that task.&#10;- Cleaned up all remaining Fabric API imports from the common module." />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
